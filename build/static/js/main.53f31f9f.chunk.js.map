{"version":3,"sources":["components/Button.js","components/Header.js","components/PostReplies.js","components/Post.js","components/Posts.js","components/AddPost.js","useLocalStorage.js","App.js","index.js"],"names":["Button","className","text","onClick","Header","showForm","jsx","PostReplies","posts","onDelete","onUpVote","onDownVote","onShowReplyForm","map","post","postParentId","id","Post","showPostForm","useState","postReplies","setPostReplies","useEffect","filter","x","voteCount","viewBox","d","author","replyText","Posts","AddPost","onSave","overlayClick","setPostAuthor","setPostText","setPostVoteCount","setReplyText","onSubmit","e","preventDefault","type","rows","placeholder","value","onChange","target","required","useLocalStorage","App","setPosts","showAddPost","setShowAddPost","setPostParentId","getPosts","JSON","parse","localStorage","getItem","uuidv4","newPost","setItem","stringify","window","location","reload","length","deletePost","parentId","postVoteCount","myData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53f31f9f.chunk.js","sourcesContent":["const Button = ({ className, text, onClick }) => {\n    return <button onClick={onClick} className={className}>{text}</button>\n}\nexport default Button\n","import React from 'react';\nimport Button from './Button';\nimport \"../index.css\";\n\nconst Header = ({ showForm }) => {\n    return (\n        <>\n            <header className=\"header\">\n                <h1 className=\"app-header\">Maths for 'em</h1>\n                <Button onClick={showForm} className={'btn btn-dark btn--large'} text={'New Post'} />\n            </header>\n            \n            <style jsx>\n            {`\n                .header {\n                    background-color: var(--header-color);\n                    color: var(--theme-color-white);\n                    padding: 3rem 5rem;\n                    border-radius: 2rem;\n                    position: absolute;\n                    margin-top: 1rem;\n                    width: 100%;\n                    max-width: 1000px;\n                    left: 50%;\n                    transform: translateX(-50%);\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    margin-bottom: 20px;\n                }\n\n                .header h1 {\n                    font-size: 2.5rem;\n                }\n            `}\n            </style>\n        </>\n    )\n}\n\nexport default Header;\n","import Post from './Post';\nimport \"../index.css\"\n\nconst PostReplies = ({ posts, onDelete, onUpVote, onDownVote , onShowReplyForm }) => {\n    return (\n        <>\n            <section className=\"posts\">\n                {posts.map((post) => (\n                   \n                    post.postParentId !== post.id\n                    ?\n                    <div>\n                        <Post key={post.id} post={post} onDelete={onDelete} onUpVote={onUpVote} onDownVote={onDownVote} onShowReplyForm={onShowReplyForm} />\n                    </div>\n                    : null\n               \n                ))}\n            </section>\n            \n            <style jsx>\n            {`\n                .posts {\n                    margin-top: 3rem;\n                    background-color: var(--theme-color-accent);\n                }\n            `}\n            </style>\n        </>\n    )\n}\n\nexport default PostReplies;\n","\nimport { useState, useEffect } from 'react';\nimport \"../index.css\"\nimport Button from './Button';\nimport PostReplies from './PostReplies';\n\nconst Post = ({ post, posts, onUpVote, onDownVote, onShowReplyForm, showPostForm }) => {\n\n    const [postReplies, setPostReplies] = useState([]); \n\n    //Filter posts by post parent id\n\n    useEffect(() => {\n        if (posts == null) {\n            setPostReplies([])\n        } else {\n            setPostReplies(posts.filter(x => x.postParentId === post.id));\n        }\n    }, [])\n    \n    return (\n        <>\n            <article className=\"post\">\n                <section className=\"post__vote-counter-wrap\">\n                    <div className=\"post__vote-counter\">\n                        <div className=\"post__vote-action\" onClick={() => onUpVote(post.id, post.voteCount)}>\n                            <svg viewBox=\"0 0 448 512\"><path d=\"M416 352c-8.188 0-16.38-3.125-22.62-9.375L224 173.3l-169.4 169.4c-12.5 12.5-32.75 12.5-45.25 0s-12.5-32.75 0-45.25l192-192c12.5-12.5 32.75-12.5 45.25 0l192 192c12.5 12.5 12.5 32.75 0 45.25C432.4 348.9 424.2 352 416 352z\" /></svg>\n                        </div>\n                        <span className=\"post__vote-counter-number\">{post.voteCount}</span>\n                        <div className=\"post__vote-action\" onClick={() => onDownVote(post.id, post.voteCount)}>\n                            <svg viewBox=\"0 0 448 512\"><path d=\"M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z\" /></svg>\n                        </div>\n                    </div>\n                </section>\n                <section className=\"post__panel\">\n                    <div className=\"post__content\">\n                        <h3>\n                            {post.author}\n                        </h3>\n                        <p>{post.text}</p>\n                        <p>{post.replyText}</p>\n                       \n                    </div>\n                    <div className=\"post__actions\">\n                        <Button text={'Reply'} onClick={() => onShowReplyForm(post.id)} className={'btn btn-light'} />\n                    </div>\n                </section>\n            </article>\n            <section className=\"post__replies\">\n                <PostReplies posts={postReplies} onShowReplyForm={showPostForm} />\n            </section>\n            \n            <style jsx>\n                {`\n                    .post {\n                        max-width: 1000px;\n                        width: 100%;\n                        display: flex;\n                        margin: 5px auto;\n                        cursor: pointer;\n                        display: flex;\n                        justify-content: space-between;\n                    }\n\n                    .post__vote-counter-wrap {\n                        display: flex;\n                        align-items: center;\n                        color: white;\n                        margin: 0 1rem;\n                    }\n\n                    .post__vote-counter {\n                        border: 3px solid rgba(255, 255, 255, 0.5);\n                        border-radius: 1rem;\n                        width: 45px;\n                        display: flex;\n                        flex-direction: column;\n                        align-items: center;\n                        padding: 0.5rem 0;\n                    }\n                    .post__vote-counter-number{\n                        padding: 0 0 0;\n                        font-size: 1.15rem;\n                        line-height: 100%;\n                    }\n\n                    .post__vote-counter svg {\n                       width: 1rem;\n                     \n                    }\n\n                    .post__vote-counter svg path {\n                        fill: rgba(255, 255, 255, 0.5);\n                    }\n\n                    .post__vote-action:hover svg path, .post__vote-action:active svg path {\n                        fill: rgba(255, 255, 255, 1);\n                    }\n\n                    .post__panel {\n                        background: white;\n                        padding: 3rem 3rem 3rem;\n                        flex: 1;\n                        display: flex;\n                        flex-direction: column;\n                    }\n\n                    .post__content {\n                        flex: 1;\n                    }\n                    .post__actions {\n                        display: flex;\n                        justify-content: flex-end;\n                        padding-top: 2rem;\n                    }\n\n                    .post h3 {\n                        margin-bottom: 2rem;\n                    }\n                    .post__replies {\n                        padding-left: 3rem;\n                    }\n\n                    .post__content h3 {\n                        font-size: 2rem;\n                    }\n\n                `}\n            </style>\n        </>\n    )\n}\n\nexport default Post\n","import Post from './Post';\nimport \"../index.css\"\n\nconst Posts = ({ posts, onDelete, onUpVote, onDownVote , onShowReplyForm }) => {\n    return (\n        <>\n            <section className=\"posts\">\n                {posts.map((post) => (\n\n                    post.postParentId\n                    ? null\n                    : <Post key={post.id} post={post} posts={posts} onDelete={onDelete} onUpVote={onUpVote} onDownVote={onDownVote} onShowReplyForm={onShowReplyForm} />\n\n                ))}\n            </section>\n            \n            <style jsx>\n            {`\n                .posts {\n\n                    background-color: var(--theme-color-accent);\n                }\n            `}\n            </style>\n        </>\n    )\n}\n\nexport default Posts;\n","import { useState } from 'react';\n\nconst AddPost = ({ onSave, overlayClick, postParentId }) => {\n    const [author, setPostAuthor] = useState('');\n    const [text, setPostText] = useState('');\n    const [voteCount, setPostVoteCount] = useState(0);\n\n    const [replyText, setReplyText] = useState('');\n\n    const onSubmit = (e) => {\n\n        e.preventDefault();\n\n        onSave({ author, text, voteCount, postParentId, replyText });\n\n        setPostAuthor('');\n        setPostText('');\n        setPostVoteCount('');\n        setReplyText('');\n    }\n\n    return (\n        <div className='modal'>\n            <div className=\"modal__overlay\" onClick={overlayClick}></div>\n            <form className=\"modal__form\" onSubmit={onSubmit}>\n\n\n            {/* Show post text or reply input on has parent id condition */}\n                {!postParentId &&\n                    <div className=\"form-control\">\n                        <textarea type=\"text\" rows=\"4\" placeholder=\"Write your post...\" value={text} onChange={(e) => setPostText(e.target.value)} required />\n                    </div>\n                }\n                {postParentId &&\n                    <div className=\"form-control\">\n                        <textarea type=\"text\" rows=\"4\" placeholder=\"Write your reply...\" value={replyText} onChange={(e) => setReplyText(e.target.value)} required />\n                    </div>\n                }\n\n                <div className=\"form-control\">\n                    <input type=\"text\" placeholder=\"Enter your pseudonym\" value={author} onChange={(e) => setPostAuthor(e.target.value)} required />\n                </div>\n                <input type=\"submit\" className=\"btn\" value=\"Post\" />\n            </form>\n            <style jsx>\n                {`\n\n                    .modal {\n                        position: fixed;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        width: 100%;\n                        height: 100vh;\n                    }\n\n                    .modal__overlay {\n                        background: rgba(0,0,0,0.3);\n                        position: absolute;\n                        width: 100vw;\n                        height: 100vh;\n                        z-index:1;\n                    }\n\n                    .modal__form {\n                        width: 80%;\n                        max-width: 650px;\n                        background: white;\n                        z-index: 2;\n                        padding: 2rem;\n\n                    }\n\n                    body {\n                        overflow-Y:hidden;\n                    }\n                    .modal__form textarea {\n                    display: block;\n                    overflow: hidden;\n                    height: auto;\n                    }\n                `}\n            </style>\n        </div>\n    )\n}\n\nexport default AddPost\n","import { useCallback, useState } from 'react';\r\n\r\nfunction useLocalStorage(key, initialState) {\r\n  const [value, setValue] = useState(localStorage.getItem(key) ?? initialState);\r\n  const updatedSetValue = useCallback(\r\n    newValue => {\r\n      if (newValue === initialState || typeof newValue === 'undefined') {\r\n        localStorage.removeItem(key);\r\n      } else {\r\n        localStorage.setItem(key, newValue);\r\n      }\r\n      setValue(newValue ?? initialState);\r\n    },\r\n    [initialState, key]\r\n  );\r\n  return [value, updatedSetValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import { useState, useEffect } from 'react';\n\nimport Header from './components/Header';\nimport Posts from './components/Posts';\nimport AddPost from './components/AddPost';\n\n// Custom hooks for fixing react sync issue with local storage changes TBC\nimport useLocalStorageNonString from './useLocalStorageNonString';\nimport useLocalStorage from './useLocalStorage';\n\nimport { v4 as uuidv4 } from 'uuid';\n\n\nfunction App() {\n\n\n    const [posts, setPosts] = useState([]); // Post State\n    const [showAddPost, setShowAddPost] = useState(false); // To reveal add post form\n    const [postParentId, setPostParentId] = useState(false); // To reveal add post form\n\n    // Fetch posts from Local Storage\n    const getPosts = JSON.parse(localStorage.getItem(\"postAdded\"));\n\n    useEffect(() => {\n        if (getPosts == null) {\n        } else {\n            setPosts(getPosts);\n        }\n    }, [])\n\n\n    //Open form modal and carry the parent post id value\n    const showPostForm = (parentId) => {\n        setPostParentId(parentId);\n        setShowAddPost(!showAddPost)\n    }\n\n    \n    //Close modal when overlay click\n    const closeForm = () => {\n        setShowAddPost(!showAddPost)\n    }\n\n    // Add Post\n    const addPost = (post) => {\n        const id = uuidv4();\n        const newPost = { id, ...post }\n        setPosts([...posts, newPost]);\n        localStorage.setItem(\"postAdded\", JSON.stringify([...posts, newPost]));\n        setShowAddPost(!showAddPost)\n        setPostParentId(false);\n\n        //Hack force reload and render until state / render managment complete\n        window.location.reload();\n    }\n\n\n    // Delete Post\n    const deletePost = (id) => {\n        const deletePost = posts.filter((post) => post.id !== id);\n        setPosts(deletePost);\n        localStorage.setItem(\"postAdded\", JSON.stringify(deletePost));\n    }\n\n\n\n    const addPostVote = (id, voteCount) => {\n\n        const postVoteCount = voteCount + 1;\n        let data = JSON.parse(localStorage.getItem('postAdded'));\n        const myData = data.map(x => {\n            if (x.id === id) {\n                return {\n                    ...x,\n                    voteCount: postVoteCount,\n                }\n            }\n            return x;\n        })\n\n        localStorage.setItem(\"postAdded\", JSON.stringify(myData));\n\n        window.location.reload();\n\n    }\n\n    const removePostVote = (id, voteCount) => {\n\n        const postVoteCount = voteCount - 1;\n        let data = JSON.parse(localStorage.getItem('postAdded'));\n        const myData = data.map(x => {\n            if (x.id === id) {\n                return {\n                    ...x,\n                    voteCount: postVoteCount,\n                }\n            }\n            return x;\n        })\n\n        localStorage.setItem(\"postAdded\", JSON.stringify(myData));\n\n        //Hack until local storage change calls react re-render\n        window.location.reload();\n\n    }\n\n\n    return (\n        <>\n            {\n                <div className='d-flex flex-col'>\n\n                    <Header className=\"container-max-width\" showForm={() => setShowAddPost(!showAddPost)} />\n\n                    {/* Revealing of Add Post Form */}\n                    {showAddPost && <AddPost onSave={addPost} postParentId={postParentId} overlayClick={closeForm} />}\n\n\n                    {/* Display Posts */}\n                    {\n                        posts.length > 0\n                            ?\n                            <section className=\"posts-section\">\n                            <Posts posts={posts} onDelete={deletePost} onShowReplyForm={showPostForm} onUpVote={addPostVote} onDownVote={removePostVote} />)\n                            </section>\n                            :\n                            <div className='posts-empty'></div>\n                    }\n                </div>\n            }\n            <style jsx>\n            {`\n                .posts-section {\n                    margin-top: 100px;\n                    padding-top: 8rem;\n                    background-color: var(--theme-color-accent);\n                }\n            `}\n            </style>\n        </>\n        \n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}